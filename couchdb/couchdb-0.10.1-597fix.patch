diff --git a/src/couchdb/couch_rep_att.erl b/src/couchdb/couch_rep_att.erl
--- apache-couchdb-0.10.1/src/couchdb/couch_rep_att.erl
+++ apache-couchdb-0.10.1/src/couchdb/couch_rep_att.erl
@@ -34,6 +34,8 @@ cleanup() ->
         %% TODO maybe log, didn't expect to have data here
         cleanup();
     {ibrowse_async_response_end, _} -> 
+        cleanup();
+    {ibrowse_async_headers, _, _, _} ->
         cleanup()
     after 0 ->
         erase(),
@@ -43,13 +45,27 @@ cleanup() ->
 % internal funs
 
 attachment_receiver(Ref, Request) ->
-    case get(Ref) of
+    try case get(Ref) of
     undefined ->
         ReqId = start_http_request(Request),
         put(Ref, ReqId),
         receive_data(Ref, ReqId);
     ReqId ->
         receive_data(Ref, ReqId)
+    end
+    catch
+    throw:{attachment_request_failed, timeout} ->
+        case {Request#http_db.retries, Request#http_db.pause} of
+        {0, _} ->
+             ?LOG_INFO("request for ~p failed", [Request#http_db.resource]),
+             throw({attachment_request_failed, max_retries_reached});
+        {N, Pause} when N > 0 ->
+            ?LOG_INFO("request for ~p timed out, retrying in ~p seconds",
+                [Request#http_db.resource, Pause/1000]),
+            timer:sleep(Pause),
+            cleanup(),
+            attachment_receiver(Ref, Request#http_db{retries = N-1})
+        end
     end.
 
 receive_data(Ref, ReqId) ->
@@ -67,6 +83,8 @@ receive_data(Ref, ReqId) ->
     {ibrowse_async_response_end, ReqId} ->
         ?LOG_ERROR("streaming att. ended but more data requested ~p", [ReqId]),
         throw({attachment_request_failed, premature_end})
+    after 31000 ->
+        throw({attachment_request_failed, timeout})
     end.
 
 start_http_request(Req) ->
@@ -80,6 +98,8 @@ start_http_request(Req) ->
         {ok, NewReqId} ->
             NewReqId
         end
+    after 10000 ->
+        throw({attachment_request_failed, timeout})
     end.
 
 validate_headers(_Req, 200, _Headers) ->
diff --git a/src/couchdb/couch_rep_changes_feed.erl b/src/couchdb/couch_rep_changes_feed.erl
--- apache-couchdb-0.10.1/src/couchdb/couch_rep_changes_feed.erl
+++ apache-couchdb-0.10.1/src/couchdb/couch_rep_changes_feed.erl
@@ -59,8 +59,7 @@ init([_Parent, #http_db{}=Source, Since, PostProps] = Args) ->
         qs = [{style, all_docs}, {heartbeat, 10000}, {since, Since},
             {feed, Feed}],
         conn = Pid,
-        options = [{stream_to, {self(), once}}, {response_format, binary},
-            {inactivity_timeout, 31000}], % miss 3 heartbeats, assume death
+        options = [{stream_to, {self(), once}}, {response_format, binary}],
         headers = Source#http_db.headers -- [{"Accept-Encoding", "gzip"}]
     },
     {ibrowse_req_id, ReqId} = couch_rep_httpc:request(Req),
@@ -144,6 +143,9 @@ handle_info({'EXIT', From, Reason}, #state{changes_loop=From} = State) ->
     ?LOG_ERROR("changes_loop died with reason ~p", [Reason]),
     {stop, changes_loop_died, State};
 
+handle_info({'EXIT', From, normal}, State) ->
+    {noreply, State};
+
 handle_info(Msg, State) ->
     ?LOG_DEBUG("unexpected message at changes_feed ~p", [Msg]),
     {noreply, State}.
@@ -323,9 +325,12 @@ local_update_notification(_, _, _) ->
 maybe_stream_next(#state{reqid=nil}) ->
     ok;
 maybe_stream_next(#state{complete=false, count=N} = S) when N < ?BUFFER_SIZE ->
+    timer:cancel(get(timeout)),
+    {ok, Timeout} = timer:exit_after(31000, changes_timeout),
+    put(timeout, Timeout),
     ibrowse:stream_next(S#state.reqid);
 maybe_stream_next(_) ->
-    ok.
+    timer:cancel(get(timeout)).
 
 send_local_changes_forever(Server, Db, Since) ->
     #db{name = DbName, user_ctx = UserCtx} = Db,
